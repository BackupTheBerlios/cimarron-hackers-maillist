From john at except.com.ar  Fri Jul  1 05:02:55 2005
From: john at except.com.ar (John Lenton)
Date: Fri, 01 Jul 2005 00:02:55 -0300
Subject: [Cimarron-hackers] Assorted news
Message-ID: <42C4B25F.3000907@except.com.ar>

Assorted news:

- a few days ago Horacio, our newest developer, added an Image
widget, complete with tests. You can now use images in cimarron! :)
(don't expect them to work on curses, however :-D). I should've
mentioned this earlier...

- you can now 'make coverage', thanks to Gareth Rees's coverage.py
(included in the tools/ directory).

- Entries can now be told to return something other than the empty
string when the entry itself is empty. In some cases you need it to
return None there (subclasses of Entry for specific datatypes will
need this)

- Window can now take screenshots of themselves (programatically)

you need to install ImageMagick for this to work, and PIL (python
imaging library) for the tests to pass. Assuming you've taken care
of that, you can take a screenshot of a window programatically.

Eventually you will be able to 'annotate' the screenshot
programatically too, but that is still a ways off.

here's the interface:

    def screenshot(filename=None, frame=True):
        """
        Take a screenshot of the window.

        Store the image in file <filename>.

        If <filename> isn't given, use the filename of the caller
        with '.png' appended.

        If <frame> is true, include the windowmanager frames.

        """

and here's a silly (but working) example:

    import fvl.cimarron
    fvl.cimarron.config()
    from fvl.cimarron.skin import Application, Window, Button

    app=Application()
    win=Window(parent=app, title='oy!')
    btn=Button(parent=win,
               label='Oooh! Clicky!',
               onAction=lambda b: win.screenshot('X:'))
    win.show()
    app.run()

(note we used ImageMagick's "special" file 'X:' to display the image
on your current display).

-- 
John Lenton (john at except.com.ar)
except - responsible free software developers for hire.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: <https://lists.berlios.de/pipermail/cimarron-hackers/attachments/20050701/3429fe77/attachment.pgp>

From john at except.com.ar  Fri Jul  1 05:37:11 2005
From: john at except.com.ar (John Lenton)
Date: Fri, 01 Jul 2005 00:37:11 -0300
Subject: [Cimarron-hackers] Is the 'target' functionality implemented?
In-Reply-To: <1120124810.22169.29.camel@michelle>
References: <1119919871.20592.95.camel@michelle>	 <2d9e37f9050628124518e486cd@mail.gmail.com>	 <1120005778.4543.88.camel@michelle>  <42C25AE2.2080607@except.com.ar>	 <1120084949.4543.122.camel@michelle>  <42C35C40.2030606@except.com.ar> <1120124810.22169.29.camel@michelle>
Message-ID: <42C4BA67.2030500@except.com.ar>

Federico Heinz wrote:
> Hmm... I'm sure we want the screen to reflect the object's state (which
> is the case now if the user presses <Enter>), and not a future object
> state (which is the case now if the user presses <Tab>), and much less a
> mix between the two (which is the case now if the user presses <Enter>
> some, <Tab> some). The only way I can think of right now to get that
> behavior is to commit on focus out for Entry instances, and on other
> events for other widgets (on click for buttons, for example, on select
> for calendars, etc).

agreed. Ok, commitValue on focus-out. I've got a question for you re
 delegation, but that can wait...

> Maybe we shouldn't force a commit on focus out, but rather check whether
> the value has really changed (compare the widget's value against the
> model), and only commit if there has been a real change.

that would be more expensive then the commit, most of the time
(also, let the model take care of that!).

> BTW: do you like the Cimarr?n 4-op calculator I'm about to include in
> the tutorial?

Yes. Just a few notes on style:

 - use 'is None' instead of '== None'
 - don't use a list when you mean a tuple, and viceversa.
 - use dispatch more

and bugs: the first time you press an operator it doesn't clear the
value displayed, and you don't reset the accumulator on clear.

And... commited it. As usuall, rollback is yours to make.

-- 
John Lenton (john at except.com.ar)
except - responsible free software developers for hire.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: <https://lists.berlios.de/pipermail/cimarron-hackers/attachments/20050701/ac3f5b9c/attachment.pgp>

From rmarkie at fi.uba.ar  Fri Jul  1 18:55:38 2005
From: rmarkie at fi.uba.ar (Ricardo Markiewicz)
Date: Fri, 01 Jul 2005 13:55:38 -0300
Subject: [Cimarron-hackers] make test falla
Message-ID: <1120236939.23552.30.camel@localhost.localdomain>

al tratar de ejecutar make test falla en este punto :
======================================================================
FAIL: testWindowCanScreenshot (testGtk2.TestGtkWindow)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gazer/prog/cimarron/test/testGtk2.py", line 182, in
testWindowCanScreenshot
    self.assertEqual(i.format, 'PNG')
AssertionError: 'EPS' != 'PNG'

----------------------------------------------------------------------
Ran 323 tests in 8.611s

FAILED (failures=1)

Lo que tengo instalado :
 * python2.4-zopeinterface  (3.0.1-1ubuntu1)
 * zope3-lib                (3.0.91-1ubuntu1
 * python2.4-gtk2           (2.6.2-1ubuntu1)
 * python2.4-libxml2        (2.6.17-0ubuntu1)

La distro es Ubuntu Breezy, alguna idea ?

gracias



From rmarkie at fi.uba.ar  Fri Jul  1 19:20:34 2005
From: rmarkie at fi.uba.ar (Ricardo Markiewicz)
Date: Fri, 01 Jul 2005 14:20:34 -0300
Subject: [Cimarron-hackers] make test falla
In-Reply-To: <42C5784F.3060402@except.com.ar>
References: <1120236939.23552.30.camel@localhost.localdomain>
	 <42C5784F.3060402@except.com.ar>
Message-ID: <1120238434.23552.37.camel@localhost.localdomain>

On vie, 2005-07-01 at 14:07 -0300, John Lenton wrote:
> [ respondo en ingl?s, ojal? no sea molestia ]

its ok :)

> ouch, I forgot to update the test (and didn't run 'make test' before
> commiting! Bad John!). Fixed.
> 
> Hmm, I should probably update the README.txt to include the
> dependency on PIL and ImageMagick...

All test pass ok now.

I have another problem :), when I try to run the example "person" : 
gazer at Miriya:~/prog/cimarron/examples/person $ export
PYTHONPATH="/home/gazer/prog/cimarron/:.:$PYTHONPATH"
gazer at Miriya:~/prog/cimarron/examples/person $ python2.4 main.py 
Traceback (most recent call last):
  File "main.py", line 24, in ?
    from windows import Main
  File "/home/gazer/prog/cimarron/examples/person/windows/__init__.py",
line 21, in ?
    from main import Main
  File "/home/gazer/prog/cimarron/examples/person/windows/main.py", line
23, in ?
    from person import ABMPerson
  File "/home/gazer/prog/cimarron/examples/person/windows/person.py",
line 25, in ?
    import model.data.persons
  File
"/home/gazer/prog/cimarron/examples/person/model/data/persons.py", line
22, in ?
    from model.address import Address
ImportError: No module named address
gazer at Miriya:~/prog/cimarron/examples/person $

There is no address.py in person/model, is that ok?, maybe a missing
file ?

thanks

Ricardo.




From fheinz at vialibre.org.ar  Sat Jul  2 00:55:45 2005
From: fheinz at vialibre.org.ar (Federico Heinz)
Date: Sat, 02 Jul 2005 00:55:45 +0200
Subject: [Cimarron-hackers] Is the 'target' functionality implemented?
In-Reply-To: <42C4BA67.2030500@except.com.ar>
References: <1119919871.20592.95.camel@michelle>
	 <2d9e37f9050628124518e486cd@mail.gmail.com>
	 <1120005778.4543.88.camel@michelle>  <42C25AE2.2080607@except.com.ar>
	 <1120084949.4543.122.camel@michelle>  <42C35C40.2030606@except.com.ar>
	 <1120124810.22169.29.camel@michelle>  <42C4BA67.2030500@except.com.ar>
Message-ID: <1120258545.2861.7.camel@michelle>

On Fri, 2005-07-01 at 00:37 -0300, John Lenton wrote:
> agreed. Ok, commitValue on focus-out. I've got a question for you re
> delegation, but that can wait...

If the question was whether we want a "willCommitValue()"/
"didCommitValue()" delegate method pair, I guess the answer is yes. It's
a point I was going to raise.

> that would be more expensive then the commit, most of the time
> (also, let the model take care of that!).

Do you really mean the model, or the persistence mechanism?

	Fede
-- 
GnuPG Public Key: gpg --keyserver wwwkeys.eu.pgp.net --recv-key BD02C6E0
Key Fingerprint: 04F4 08C5 14B7 2C3D DB21  ACF8 6CF5 0B0C BD02 C6E0
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/cimarron-hackers/attachments/20050702/80e81701/attachment.pgp>

From john at except.com.ar  Sat Jul  2 15:37:24 2005
From: john at except.com.ar (John Lenton)
Date: Sat, 02 Jul 2005 10:37:24 -0300
Subject: [Cimarron-hackers] Is the 'target' functionality implemented?
In-Reply-To: <1120258545.2861.7.camel@michelle>
References: <1119919871.20592.95.camel@michelle>	 <2d9e37f9050628124518e486cd@mail.gmail.com>	 <1120005778.4543.88.camel@michelle>  <42C25AE2.2080607@except.com.ar>	 <1120084949.4543.122.camel@michelle>  <42C35C40.2030606@except.com.ar>	 <1120124810.22169.29.camel@michelle>  <42C4BA67.2030500@except.com.ar> <1120258545.2861.7.camel@michelle>
Message-ID: <42C69894.7060707@except.com.ar>

Federico Heinz wrote:
> On Fri, 2005-07-01 at 00:37 -0300, John Lenton wrote:
> 
>>agreed. Ok, commitValue on focus-out. I've got a question for you re
>>delegation, but that can wait...
> 
> 
> If the question was whether we want a "willCommitValue()"/
> "didCommitValue()" delegate method pair, I guess the answer is yes. It's
> a point I was going to raise.

actually, what I was going to ask was whether the "Controller is
default delegate" behavior you have mentioned in the past should be
enforced by cimarron, or if it's just the usual way things work.

but yes, we're missing a lot of delegation checks. We'll add them as
we go along.

>>that would be more expensive then the commit, most of the time
>>(also, let the model take care of that!).
> 
> Do you really mean the model, or the persistence mechanism?

the Entry doesn't really care, does it?

-- 
John Lenton (john at except.com.ar)
except - responsible free software developers for hire.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: <https://lists.berlios.de/pipermail/cimarron-hackers/attachments/20050702/29b32bb9/attachment.pgp>

From john at except.com.ar  Sat Jul  2 15:43:18 2005
From: john at except.com.ar (John Lenton)
Date: Sat, 02 Jul 2005 10:43:18 -0300
Subject: [Cimarron-hackers] make test falla
In-Reply-To: <1120238434.23552.37.camel@localhost.localdomain>
References: <1120236939.23552.30.camel@localhost.localdomain>	 <42C5784F.3060402@except.com.ar> <1120238434.23552.37.camel@localhost.localdomain>
Message-ID: <42C699F6.3050601@except.com.ar>

Ricardo Markiewicz wrote:
> I have another problem :), when I try to run the example "person" : 
> [...]
>     from model.address import Address
> ImportError: No module named address

there was an error in the import line. I've fixed that, but the
example still doesn't work (you can look at the windows now, but the
behavior is broken because it depends on the old api. I was going to
fix it before answering, but some parts of the new api are still
missing. More on that later.)

-- 
John Lenton (john at except.com.ar)
except - responsible free software developers for hire.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: <https://lists.berlios.de/pipermail/cimarron-hackers/attachments/20050702/78288d50/attachment.pgp>

From john at except.com.ar  Sat Jul  2 16:12:33 2005
From: john at except.com.ar (John Lenton)
Date: Sat, 02 Jul 2005 11:12:33 -0300
Subject: [Cimarron-hackers] details of 'target' functionality: multiplicity
Message-ID: <42C6A0D1.8040202@except.com.ar>

Recently (a couple of weeks ago) we decided to demand a (very
lightweight) interface on models that wanted to work with cimarron.
That interface is

    class IModel(interface.Interface):
        def getattr(attr):
            """
            return the value of attribute 'attr'.
            """
        def setattr(attr, value):
            """
            set the value of attribute 'attr'  to 'value'.
            """

with this interface implemented by the model, controls can be given
a |target| and an |attribute|, and they can then refresh their value
by simply doing

    self.value = self.target.getattr(self.attribute)

(i.e., person.getattr('name'))

This works very nicely for controls that have a single value, such
as Entry; it also works nicely for controls that have multiple
values, such as Grid. However, something extra is missing for
controls that have a single value that is selected from a list of
possible values, such as a dropdown, a radiogroup, or SelectionGrid.
The |value| of each of these controls is single, but we need a way
for them to fetch a list of values from the model. Previously the
controller had to do everything (including the refresh) by hand, and
that was the reason of the change; extending this idea to the
fetching of the list is natural.

We haven't yet implemented this extension, however, and I thought
I'd describe the idea on the list before commiting it in code. We're
thinking that models that want to be able to be used in these
selection controls should implement something similar to Modeling's
EditingContext.fetch, i.e.

    class ISelectionModel(IModel):
        @classmethod
        def fetch(**qualifier):
            """
            return a generator of targets,
            filtered by 'qualifier'
            """

|fetch| should be a class method, so the control can do

    self.target.fetch(name='foo*')

what do you think?

-- 
John Lenton (john at except.com.ar)
except - responsible free software developers for hire.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: <https://lists.berlios.de/pipermail/cimarron-hackers/attachments/20050702/e6f49a17/attachment.pgp>

From fheinz at vialibre.org.ar  Tue Jul  5 22:04:34 2005
From: fheinz at vialibre.org.ar (Federico Heinz)
Date: Tue, 05 Jul 2005 17:04:34 -0300
Subject: [Cimarron-hackers] Is the 'target' functionality implemented?
In-Reply-To: <42C69894.7060707@except.com.ar>
References: <1119919871.20592.95.camel@michelle>
	 <2d9e37f9050628124518e486cd@mail.gmail.com>
	 <1120005778.4543.88.camel@michelle>  <42C25AE2.2080607@except.com.ar>
	 <1120084949.4543.122.camel@michelle>  <42C35C40.2030606@except.com.ar>
	 <1120124810.22169.29.camel@michelle>  <42C4BA67.2030500@except.com.ar>
	 <1120258545.2861.7.camel@michelle>  <42C69894.7060707@except.com.ar>
Message-ID: <1120593875.13290.26.camel@michelle>

On Sat, 2005-07-02 at 10:37 -0300, John Lenton wrote:
> actually, what I was going to ask was whether the "Controller is
> default delegate" behavior you have mentioned in the past should be
> enforced by cimarron, or if it's just the usual way things work.

It's just a very common case, but it shouldn't be mandatory. I don't
think it should be even automatic.

> >>(also, let the model take care of that!). 
> > Do you really mean the model, or the persistence mechanism?
> the Entry doesn't really care, does it?

It doesn't. I do. If it is feasible to check it inexpensively in the
persistence mechanism, I'm for it. But if it has to be implemented in
each model, it becomes a nuisance. And if the checking at the
persistence mechanism involves comparing values with the database, that
may be really expensive, for you must check them all at the same time,
and regardless of whether they were touched or not, instead of comparing
only values of items that were changed by the user, individually and at
the user's leisurely pace.

	Fede
-- 
GnuPG Public Key: gpg --keyserver wwwkeys.eu.pgp.net --recv-key BD02C6E0
Key Fingerprint: 04F4 08C5 14B7 2C3D DB21  ACF8 6CF5 0B0C BD02 C6E0
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: <https://lists.berlios.de/pipermail/cimarron-hackers/attachments/20050705/304683d2/attachment.pgp>

